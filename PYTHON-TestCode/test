import random
import matplotlib.pyplot as plt
import numpy as np

# Définition des couleurs pour les différentes entités sur la carte
COULEUR_ENTREE = 'blue'
COULEUR_SORTIE = 'green'
COULEUR_INTERSECTION_4 = 'orange'
COULEUR_INTERSECTION_3 = 'red'
COULEUR_ROUTE = 'black'
COULEUR_VIDE = 'white'

def generer_routes(nb_entrees, nb_sorties, nb_intersection_4, nb_intersection_3, taille_map_x, taille_map_y):
    # Création de la carte vide
    carte = [[COULEUR_VIDE for _ in range(taille_map_y)] for _ in range(taille_map_x)]
    
    # Placement des entrées et sorties
    placer_entrees_sorties(carte, nb_entrees, nb_sorties)
    
    # Placement des intersections à 4 routes
    placer_intersections(carte, nb_intersection_4, COULEUR_INTERSECTION_4)
    
    # Placement des intersections à 3 routes
    placer_intersections(carte, nb_intersection_3, COULEUR_INTERSECTION_3)
    
    # Affichage de la carte générée
    afficher_carte_matplotlib(carte)

def placer_entrees_sorties(carte, nb_entrees, nb_sorties):
    taille_x, taille_y = len(carte), len(carte[0])
    
    # Placement des entrées sur les bords gauche et droit
    for i in range(nb_entrees):
        if random.random() < 0.5:  # Placer à gauche
            carte[0][random.randint(0, taille_y - 1)] = COULEUR_ENTREE
        else:  # Placer à droite
            carte[taille_x - 1][random.randint(0, taille_y - 1)] = COULEUR_ENTREE
        nb_entrees -= 1
        if nb_entrees == 0:
            break
    
    # Placement des sorties sur les bords supérieur et inférieur
    for i in range(nb_sorties):
        if random.random() < 0.5:  # Placer en haut
            carte[random.randint(0, taille_x - 1)][0] = COULEUR_SORTIE
        else:  # Placer en bas
            carte[random.randint(0, taille_x - 1)][taille_y - 1] = COULEUR_SORTIE
        nb_sorties -= 1
        if nb_sorties == 0:
            break

def placer_intersections(carte, nb_intersections, couleur):
    taille_x, taille_y = len(carte), len(carte[0])
    while nb_intersections > 0:
        x = random.randint(1, taille_x - 2)  # Éviter les bords de la carte
        y = random.randint(1, taille_y - 2)
        if carte[x][y] == COULEUR_VIDE:
            carte[x][y] = couleur
            nb_intersections -= 1

def afficher_carte_matplotlib(carte):
    plt.figure(figsize=(8, 8))
    plt.imshow([[convertir_couleur_en_valeur(couleur) for couleur in row] for row in carte])
    plt.axis('off')
    plt.show()

def convertir_couleur_en_valeur(couleur):
    if couleur == COULEUR_ENTREE:
        return 1
    elif couleur == COULEUR_SORTIE:
        return 2
    elif couleur == COULEUR_INTERSECTION_4:
        return 3
    elif couleur == COULEUR_INTERSECTION_3:
        return 4
    elif couleur == COULEUR_ROUTE:
        return 5
    elif couleur == COULEUR_VIDE:
        return 0

# Exemple d'utilisation
generer_routes(nb_entrees=2, nb_sorties=2, nb_intersection_4=5, nb_intersection_3=3, taille_map_x=10, taille_map_y=10)
